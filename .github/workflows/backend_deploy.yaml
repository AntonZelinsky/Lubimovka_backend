name: backend lubimovka build and deploy

on:
  push:
    branches:
      - develop
      - bugfix/deploy_env

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.event.repository.name }}

defaults:
  run:
    working-directory: .

jobs:
  # tests:
  #   name: Run test.
  #   runs-on: ubuntu-latest
  #   steps:
  #   -
  #     name: Check out the repo
  #     uses: actions/checkout@v2
  #   -
  #     name: Set up Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.9
  #   -
  #     name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r requirements/dev.txt
  #   -
  #     name: Test with pytest
  #     run: pytest

  # build-and-push-image-to-github-packages:
    # name: Push Docker image to GitHub Packages
    # runs-on: ubuntu-latest
    # # needs: tests
    # permissions:
    #   contents: read
    #   packages: write
    # steps:
    #   -
    #     name: Check out the repo
    #     uses: actions/checkout@v2
    #   -
    #     name: Build and Publish head Docker image
    #     uses: DrSkunk/gp-docker-action@1.1.9
    #     with:
    #       github-token: ${{ secrets.GITHUB_TOKEN }}
    #       image-name: lubimovka_backend
    #       image-tag: develop
      #   name: Log in to the Container registry
      #   uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      # -
      #   name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # -
      #   name: Build and push Docker image
      #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    # needs: build-and-push-image-to-github-packages
    steps:
      -
        name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          env:
            secrets: ${{ toJson(secrets) }}
          script: |
            cd ${{ github.event.repository.name }}
            git pull origin bugfix/deploy_env
            chmod u+x env_script.sh
            ./env_script.sh "$secrets"

  # send_message:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #     - name: send message
  #       uses: appleboy/telegram-action@master
  #       with:
  #         to: ${{ secrets.TELEGRAM_ID }}
  #         token: ${{ secrets.TELEGRAM_TOKEN }}
  #         message: ${{ github.workflow }} success!
