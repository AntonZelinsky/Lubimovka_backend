# Generated by Django 3.2.13 on 2022-06-07 07:31

from django.db import migrations
from django.db.models import IntegerField
from django.contrib.admin.models import LogEntry, ADDITION
from django.contrib.contenttypes.models import ContentType
from django.db.models.functions import Cast


def load_creators(apps, schema_editor):
    Project = apps.get_model("articles", "Project")
    contentType = ContentType.objects.get_for_model(Project)
    project_logs = LogEntry.objects\
        .annotate(object_id_as_int=Cast('object_id', IntegerField()))\
        .filter(object_id_as_int__in=Project.objects.values_list('id'))\
        .filter(content_type=contentType)\
        .filter(action_flag=ADDITION)\
        .values("object_id_as_int", "user_id")
    for log in project_logs:
        project = Project.objects.get(id=log["object_id_as_int"])
        if project.creator is None:
            project.update(creator=log["user_id"])

    BlogItem = apps.get_model("articles", "BlogItem")
    contentType = ContentType.objects.get_for_model(BlogItem)
    blog_logs = LogEntry.objects\
        .annotate(object_id_as_int=Cast('object_id', IntegerField()))\
        .filter(object_id_as_int__in=BlogItem.objects.values_list('id'))\
        .filter(content_type=contentType)\
        .filter(action_flag=ADDITION)\
        .values("object_id_as_int", "user_id")
    for log in blog_logs:
        blog = BlogItem.objects.get(id=log["object_id_as_int"])
        if blog.creator is None:
            blog.update(creator=log["user_id"])

    NewsItem = apps.get_model("articles", "NewsItem")
    contentType = ContentType.objects.get_for_model(NewsItem)
    news_logs = LogEntry.objects\
        .annotate(object_id_as_int=Cast('object_id', IntegerField()))\
        .filter(object_id_as_int__in=NewsItem.objects.values_list('id'))\
        .filter(content_type=contentType)\
        .filter(action_flag=ADDITION)\
        .values("object_id_as_int", "user_id")
    for log in news_logs :
        news = NewsItem.objects.get(id=log["object_id_as_int"])
        if news.creator is None:
            news.update(creator=log["user_id"])


class Migration(migrations.Migration):

    dependencies = [
        ('articles', '0008_auto_20220604_1009'),
    ]

    operations = [migrations.RunPython(load_creators)]
