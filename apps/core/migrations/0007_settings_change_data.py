# Generated by Django 3.2.11 on 2022-02-06 12:56

from django.db import migrations

def change_first_screen_settings(apps, schema_editor):

    Setting = apps.get_model("core", "Setting")

    # changing main_first_screen_url_title
    setting = Setting.objects.get_or_create(
        field_type="TEXT",
        group="FIRST_SCREEN",
        settings_key="main_first_screen_url_title",
    )[0]
    setting.description = "Заголовок для ссылки для первой страницы"
    setting.save()

    # changing main_first_screen_url
    setting = Setting.objects.get_or_create(
        field_type="URL",
        group="FIRST_SCREEN",
        settings_key="main_first_screen_url",
    )[0]
    setting.description = "Ссылка для первой страницы"
    setting.save()

def change_main_settings(apps, schema_editor):

    Setting = apps.get_model("core", "Setting")

    # changing main_add_afisha
    setting = Setting.objects.get_or_create(
        field_type="BOOLEAN",
        group="MAIN",
        settings_key="main_add_afisha",
    )[0]
    setting.description = "Отображение афиши на главной странице"
    setting.save()

    # changing main_add_banners
    setting = Setting.objects.get_or_create(
        field_type="BOOLEAN",
        group="MAIN",
        settings_key="main_add_banners",
    )[0]
    setting.description = "Отображение банера на главной странице"
    setting.save()

    # changing main_add_blog
    setting = Setting.objects.get_or_create(
        field_type="BOOLEAN",
        group="MAIN",
        settings_key="main_add_blog",
    )[0]
    setting.description = "Отображение дневника на главной странице"
    setting.save()

    # changing main_add_news
    setting = Setting.objects.get_or_create(
        field_type="BOOLEAN",
        group="MAIN",
        settings_key="main_add_news",
    )[0]
    setting.description = "Отображение новостей на главной странице"
    setting.save()

    # changing main_add_places
    setting = Setting.objects.get_or_create(
        field_type="BOOLEAN",
        group="MAIN",
        settings_key="main_add_places",
    )[0]
    setting.description = "Отображение площадок на главной странице"
    setting.save()

    # changing main_add_short_list
    setting = Setting.objects.get_or_create(
        field_type="BOOLEAN",
        group="MAIN",
        settings_key="main_add_short_list",
    )[0]
    setting.description = "Отображение шорт-листа на главной странице"
    setting.save()

    # changing main_add_video_archive
    setting = Setting.objects.get_or_create(
        field_type="BOOLEAN",
        group="MAIN",
        settings_key="main_add_video_archive",
        boolean=True,
    )[0]
    setting.description = "Отображение видео-архива на главной странице"
    setting.save()

    # changing main_blog_title
    setting = Setting.objects.get_or_create(
        field_type="TEXT",
        group="MAIN",
        settings_key="main_blog_title",
    )[0]
    setting.description = "Заголовок для дневника на главной странице"
    setting.save()

    # changing main_news_title
    setting = Setting.objects.get_or_create(
        field_type="TEXT",
        group="MAIN",
        settings_key="main_news_title",
    )[0]
    setting.description = "Заголовок для новостей на главной странице"
    setting.save()

    # changing main_short_list_title
    setting = Setting.objects.get_or_create(
        field_type="TEXT",
        group="MAIN",
        settings_key="main_short_list_title",
    )[0]
    setting.description = "Заголовок для шорт-листа на главной странице"
    setting.save()

    # changing main_video_archive_photo
    setting = Setting.objects.get_or_create(
        field_type="IMAGE",
        group="MAIN",
        settings_key="main_video_archive_photo",
    )[0]
    setting.description = "Фото для видео-архива на главной странице"
    setting.save()

    # changing main_video_archive_url
    setting = Setting.objects.get_or_create(
        field_type="URL",
        group="MAIN",
        settings_key="main_video_archive_url",
    )[0]
    setting.description = "Ссылка на youtube видео-архива на главной странице"
    setting.save()


def change_afisha_settings(apps, schema_editor):

    Setting = apps.get_model("core", "Setting")

    # changing afisha_title_regular
    setting = Setting.objects.get_or_create(
        field_type="TEXT",
        group="AFISHA",
        settings_key="afisha_title_regular",
    )[0]
    setting.description = "Заголовок афиши"
    setting.save()

    # changing afisha_description_regular
    setting = Setting.objects.get_or_create(
        field_type="TEXT",
        group="AFISHA",
        settings_key="afisha_description_regular",
    )[0]
    setting.description = "Описание под заголовком"
    setting.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0006_facebook_photo_gallery_link'),
    ]

    operations = [
        migrations.RunPython(
            change_first_screen_settings,
        ),
        migrations.RunPython(
            change_main_settings,
        ),
        migrations.RunPython(
            change_afisha_settings,
        ),
    ]
